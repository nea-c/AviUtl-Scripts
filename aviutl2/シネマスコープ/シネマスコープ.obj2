--track@centerX:中心X,-10000,10000,0,0.1
--track@centerY:中心Y,-10000,10000,0,0.1
--track@angle:角度,-10000,10000,0,0.01
--track@offset:オフセット,-10000,10000,0,0.1
--track@width:幅,0,50000,0,0.01
--color@color:色,0x000000



local function belt_draw(width, angle, centerX, centerY, offset, variant)
  local rad = math.atan2(width, 0) + math.rad(angle)
  local rad_90 = rad + math.rad(90)
  local inverter = (variant == 2) and -1 or 1
  local l_w1 = (width * inverter + offset) * math.cos(rad) + (500000 * inverter + offset) * math.cos(rad_90)
  local l_h1 = (width * inverter + offset) * math.sin(rad) + (500000 * inverter + offset) * math.sin(rad_90)
  local l_w2 = (width * inverter + offset) * math.cos(rad) + (-500000 * inverter + offset) * math.cos(rad_90)
  local l_h2 = (width * inverter + offset) * math.sin(rad) + (-500000 * inverter + offset) * math.sin(rad_90)
  local l_w3 = (500000 * inverter) * math.cos(rad) + (-500000 * inverter) * math.cos(rad_90)
  local l_h3 = (500000 * inverter) * math.sin(rad) + (-500000 * inverter) * math.sin(rad_90)
  local l_w4 = (500000 * inverter) * math.cos(rad) + (500000 * inverter) * math.cos(rad_90)
  local l_h4 = (500000 * inverter) * math.sin(rad) + (500000 * inverter) * math.sin(rad_90)

  l_w1 = l_w1 + centerX
  l_h1 = l_h1 + centerY
  l_w2 = l_w2 + centerX
  l_h2 = l_h2 + centerY
  l_w3 = l_w3 + centerX
  l_h3 = l_h3 + centerY
  l_w4 = l_w4 + centerX
  l_h4 = l_h4 + centerY


  obj.drawpoly(l_w1,l_h1,0, l_w2,l_h2,0, l_w3,l_h3,0, l_w4,l_h4,0)

end



obj.setoption("drawtarget","tempbuffer",obj.screen_w,obj.screen_h)
obj.load("figure","四角形",color,1)

if (width==0) then
  local half_screen_w, half_screen_h = obj.screen_w / 2, obj.screen_h / 2
  obj.drawpoly(-half_screen_w,-half_screen_h,0, half_screen_w,-half_screen_h,0, half_screen_w,half_screen_h,0, -half_screen_w,half_screen_h,0)
else
  belt_draw(width, angle, centerX, centerY, offset, 1)
  belt_draw(width, angle, centerX, centerY, offset, 2)
end

obj.load("tempbuffer")